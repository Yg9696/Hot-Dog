@model List<ProductsModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Products Page</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/HomePage.css"> 
    <style>
        
        .product-card {
            background-color: #fff;
            border: 1px solid #dee2e6;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
        }

            .product-card .card-body {
                padding: 0;
            }

            .product-card .card-img-top {
                width: 100%;
                height: 200px;
                object-fit: cover;
                border-radius: 10px;
            }

            .product-card .card-title {
                font-size: 1.25rem;
                font-weight: bold;
                margin-top: 15px;
                margin-bottom: 10px;
            }

            .product-card .card-text {
                margin-bottom: 15px;
            }

            .product-card .btn-outline-dark {
                width: 100%;
            }
        /*.search-container,
        .filter-sort-container,
        .price-range-container {
            text-align: center;
            margin-bottom: 20px;
        }

            .search-container input[type="text"],
            .price-range-container input[type="number"] {
                padding: 8px;
                margin: 0 10px;
                width: 200px;
                box-sizing: border-box;
            }

            .search-container button,
            .filter-sort-container button,
            .price-range-container button {
                padding: 8px 16px;
                margin: 0 10px;
                cursor: pointer;
                border: none;
                border-radius: 4px;
                background-color: #007bff;
                color: #fff;
                transition: background-color 0.3s;
            }

                .search-container button:hover,
                .filter-sort-container button:hover,
                .price-range-container button:hover {
                    background-color: #0056b3;
                }

            .filter-sort-container select {
                padding: 8px;
                margin: 0 10px;
                width: 200px;
                box-sizing: border-box;
            }

            .filter-sort-container select,
            .price-range-container label {
                font-size: 16px;
            }*/

        .search-sort-price-container {
            background-color: #f8f9fa;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

            .search-sort-price-container form {
                display: flex;
                justify-content: center;
                align-items: center;
                margin-bottom: 10px;
            }

                .search-sort-price-container form input[type="text"],
                .search-sort-price-container form input[type="number"],
                .search-sort-price-container form select {
                    padding: 8px;
                    margin: 0 10px;
                    width: 200px;
                    box-sizing: border-box;
                }

                .search-sort-price-container form button {
                    padding: 8px 16px;
                    margin: 0 10px;
                    cursor: pointer;
                    border: none;
                    border-radius: 4px;
                    background-color: #007bff;
                    color: #fff;
                    transition: background-color 0.3s;
                }

                    .search-sort-price-container form button:hover {
                        background-color: #0056b3;
                    }

        .price-range-container label {
            display: block;
            margin-bottom: 5px;
        }


        .out-of-stock-message {
            color: red;
            font-weight: bold;
        }
    </style>
</head>
<body>

    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container px-4 px-lg-5">
            <a class="navbar-brand" href="#!">Pets Shop</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0 ms-lg-4">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="#!">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Home" asp-action="About">About</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" id="navbarDropdown" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">Shop</a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item" asp-controller="Products" asp-action="MyProducts">All Products</a></li>
                        </ul>
                    </li>
                </ul>
                <form asp-controller="Home" asp-action="Index" method="post" class="d-flex mr-2">
                    <button class="btn btn-outline-dark" type="submit">
                        <i class="bi-house-door-fill me-1"></i>
                        Back to Home Page
                    </button>
                </form>
                <form asp-controller="Products" asp-action="Cart" method="post" class="d-flex mr-2">
                    <button class="btn btn-outline-dark" type="submit">
                        <i class="bi-cart-fill me-1"></i>
                        Cart
                        <span class="badge bg-dark text-white ms-1 rounded-pill"> </span>
                    </button>
                </form>
                <form asp-controller="Login" asp-action="Logout" method="post" class="d-flex ml-2">
                    <button class="btn btn-outline-dark" type="submit">
                        <i class="bi-box-arrow-right me-1"></i>
                        LogOut
                    </button>
                </form>
            </div>
        </div>
    </nav>


    <div class="container">
        <div class="search-sort-price-container">
            @using (Html.BeginForm("FilteredProducts", "Products", FormMethod.Post))
            {
                <form>
                    <input name="searchedInput" type="text" placeholder="Search for products...">
                    <button>Search</button>
                </form>
            }

            @using (Html.BeginForm("SortProducts", "Products", FormMethod.Post))
            {
                <form>
                    <select id="sortOptions" name="selectedFilter">
                        <option value="" disabled selected>Select Filter</option>
                        <option value="name">Sort by Name</option>
                        <option value="price">Sort by Price</option>
                        <option value="collection">Filter by Collection</option>
                        <option value="stock">Filter by Stock</option>
                        <option value="Popularity">Filter by Popularity</option>
                        <option value="DateModified">Filter by Reliesed Date </option>
                    </select>
                    <button name="sign" value="down" type="submit">Sort down</button>
                    <button name="sign" value="up" type="submit">Sort up</button>
                </form>
            }

            @using (Html.BeginForm("SortProducts", "Products", FormMethod.Post))
            {
                <form>
                    <label for="minPrice">Search from price:</label>
                    <input name="minPrice" type="number" placeholder="Min price" step="10" min="0">
                    <label for="maxPrice">To price:</label>
                    <input name="maxPrice" type="number" placeholder="Max price" step="10" min="0">
                    <button name="sign" value="Search" type="submit">Search</button>
                    @if (TempData["AlertMessage"] != null)
                    {
                        <label>@TempData["AlertMessage"]</label>
                        TempData["AlertMessage"] = null;
                    }
                </form>
            }
        </div>
    </div>

    <section class="py-5">
        <div class="container px-4 px-lg-5 mt-5">
            @for (int i = 0; i < Model.Count; i += 4)
            {
                <div class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content-center">
                    @for (int j = i; j < Math.Min(i + 4, Model.Count); j++)
                    {
                        <div class="col">
                            <div class="product product-card" data-product-id="@Model[j].ProductId">
                                <h2 class="card-title">@Model[j].ProductName</h2>
                                <p class="product-id">ID: @Model[j].ProductId</p>
                                <p class="product-price">Full price: @(Model[j].Price)₪</p>
                                <p class="product-price">Discounted price: @(Convert.ToInt32((Model[j].Price * (Convert.ToSingle(100 - Model[j].Discount) / 100))))$</p>
                                <p class="product-Collection">Collection: @Model[j].Collection</p>
                                <p class="product-Description">Description: @Model[j].Description</p>
                                <p class="product-Stock">In stock: @Model[j].Stock</p>
                                <p class="product-DateReliesed">Date Reliesed: @Model[j].DateReliesed.ToString("dd/MM/yyyy")</p>

                                @if (Model[j].Stock <= 0)
                                {
                                    <p class="out-of-stock-message">Out of stock</p>
                                    <form class="notify-form" data-product-id="@Model[j].ProductId">
                                    <input type="hidden" name="productId" value="@Model[j].ProductId">
                                    <button type="button" class="btn btn-primary notify-btn">Notify Me</button>
                                </form>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-primary add-to-cart-btn">Add to Cart</button>
                                    @using (Html.BeginForm("BuyNow", "Products", FormMethod.Post))
                                    {
                                        <input type="hidden" name="id" value="@Model[j].ProductId" />
                                        <button type="submit" class="btn btn-primary">Buy Now</button>
                                    }
                                }
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </section>


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.add-to-cart-btn').click(function () {
                var productId = $(this).closest('.product-card').data('product-id');

                $.ajax({
                    url: '/Products/AddToCart',
                    type: 'POST',
                    data: { productId: productId },
                    success: function (response) {
                        $('.product-card[data-product-id="' + productId + '"] .product-Stock').text('In stock: ' + response.updatedStock);
                        alert('Product added to cart successfully!');
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                        alert('Failed to add product to cart.');
                    }
                });
            });
        });
            $(document).ready(function () {
                $('.notify-btn').click(function () {
                    var form = $(this).closest('.notify-form');
                    var productId = form.data('product-id');

                    $.ajax({
                        url: '/Products/NotifyMe',
                        type: 'POST',
                        data: form.serialize(), // Serialize form data
                        success: function (response) {
                            // Handle success
                            $('#notify-form-container-' + productId).html('<p>Notification sent successfully!</p>');
                        },
                        error: function (xhr, status, error) {
                            // Handle error
                            $('#notify-form-container-' + productId).html('<p>Error: Failed to send notification.</p>');
                        }
                    });
                });
            });
    
    </script>
</body>
</html>

