@model ShopProject.Models.AccountModel
@{
    ViewData["Title"] = "User Registration";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        body {
            background-color: #f8f9fa;
            background: url('/dogpic.jpg') no-repeat center center fixed;
        }

        .container {
            max-width: 500px;
            margin: auto;
            margin-top: 50px;
            background-color: #fff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        }

        h2 {
            text-align: center;
            margin-bottom: 30px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .error-message {
            color: red;
            font-size: 14px;
            margin-top: 5px;
        }
    </style>
</head>
<body>

    <div class="container">
        <h2>User Registration</h2>
        <form id="registrationForm" action="/Login/Register" method="post">
            <div class="form-group">
                <input type="text" class="form-control" name="FirstName" placeholder="First Name" required>
            </div>
            <div class="form-group">
                <input type="text" class="form-control" name="LastName" placeholder="Last Name" required>
            </div>
            <div class="form-group">
                <input type="email" class="form-control" name="Email" placeholder="Email" required>
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "error-message" })
            </div>
            <div class="form-group">
                <input type="tel" class="form-control" name="PhoneNumber" placeholder="Phone Number" pattern="05\d{8}" title="Phone number must start with '05' and have 10 digits in total" required>
            </div>

            <div class="form-group">
                <input type="number" class="form-control" name="Age" placeholder="Age" min="0" max="120" title="Age must be between 0 and 120" required>
            </div>



            <div class="form-group">
                <input type="text" class="form-control" name="Username" placeholder="Username" required>
            </div>
            <div class="form-group">
                <input type="password" class="form-control" id="password" name="Password" placeholder="Password" pattern="^(?=.*[a-z])(?=.*[A-Z]).{8,16}$" title="Password must be 8 to 16 characters long and contain at least one uppercase letter and one lowercase letter" required>
            </div>

            <div class="form-group">
                <input type="password" class="form-control" id="confirmPassword" name="ConfirmPassword" placeholder="Confirm Password" required>
                <div id="passwordError" class="error-message"></div>
            </div>
            <div>
                <button type="submit" class="btn btn-primary btn-block">Register</button>
            </div>
        </form>
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="error-message">
                @foreach (var modelState in ViewData.ModelState.Values)
                {
                    foreach (var error in modelState.Errors)
                    {
                        <p>@error.ErrorMessage</p>
                    }
                }
            </div>
        }
        <div class="mt-3">
            <a href="@Url.Action("Index", "Login")" class="btn btn-secondary btn-block">Back to Login</a>
        </div>
    </div>

    <script>
        document.getElementById('registrationForm').addEventListener('submit', function (event) {
            var password = document.getElementById('password').value;
            var confirmPassword = document.getElementById('confirmPassword').value;
            var passwordError = document.getElementById('passwordError');

            if (password !== confirmPassword) {
                passwordError.innerText = 'Passwords do not match';
                event.preventDefault(); // Prevent form submission
            } else {
                passwordError.innerText = ''; // Clear error message
            }
        });
    </script>

</body>
</html>
